# Generated by Django 4.2 on 2023-04-15 11:03

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("organizations", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Answer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "dateCreated",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Data de criação"
                    ),
                ),
                (
                    "lastModified",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Última modificacao"
                    ),
                ),
                ("isActive", models.BooleanField(default=True, null=True)),
                ("isPublic", models.BooleanField(default=False, null=True)),
                ("isRemoved", models.BooleanField(default=False, null=True)),
                ("answer_content", models.TextField(verbose_name="Resposta")),
            ],
            options={
                "verbose_name": "Resposta",
                "verbose_name_plural": "Respostas",
                "ordering": ["lastModified"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ChatSession",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "dateCreated",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Data de criação"
                    ),
                ),
                (
                    "lastModified",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Última modificacao"
                    ),
                ),
                ("isActive", models.BooleanField(default=True, null=True)),
                ("isPublic", models.BooleanField(default=False, null=True)),
                ("isRemoved", models.BooleanField(default=False, null=True)),
                (
                    "session_name",
                    models.CharField(
                        help_text="Nome da sessão",
                        max_length=128,
                        verbose_name="Nome da sessão",
                    ),
                ),
            ],
            options={
                "verbose_name": "Sessao",
                "verbose_name_plural": "Sessões",
                "ordering": ["lastModified"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="PromptTemplate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "dateCreated",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Data de criação"
                    ),
                ),
                (
                    "lastModified",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Última modificacao"
                    ),
                ),
                ("isActive", models.BooleanField(default=True, null=True)),
                ("isPublic", models.BooleanField(default=False, null=True)),
                ("isRemoved", models.BooleanField(default=False, null=True)),
                (
                    "template_name",
                    models.CharField(max_length=128, verbose_name="Nome do template"),
                ),
                (
                    "template_file",
                    models.FileField(upload_to="", verbose_name="Template"),
                ),
            ],
            options={
                "verbose_name": "Template do Chat",
                "verbose_name_plural": "Templates dos Chats",
                "ordering": ["lastModified"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Question",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "dateCreated",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Data de criação"
                    ),
                ),
                (
                    "lastModified",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Última modificacao"
                    ),
                ),
                ("isActive", models.BooleanField(default=True, null=True)),
                ("isPublic", models.BooleanField(default=False, null=True)),
                ("isRemoved", models.BooleanField(default=False, null=True)),
                ("question_content", models.TextField(verbose_name="Pergunta")),
                (
                    "generated_embedding",
                    models.JSONField(blank=True, default=dict, null=True),
                ),
                (
                    "num_tokens",
                    models.PositiveSmallIntegerField(
                        default=0, verbose_name="Total de tokens"
                    ),
                ),
                ("isReady", models.BooleanField(default=False)),
                ("isReadyToAsk", models.BooleanField(default=False)),
                ("hasErrors", models.BooleanField(default=False)),
                ("lastLog", models.JSONField(blank=True, default=dict, null=True)),
                (
                    "answer",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="questions_using_this_answer",
                        to="chats.answer",
                        verbose_name="Resposta",
                    ),
                ),
                (
                    "chat_session",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="session_questions",
                        to="chats.chatsession",
                        verbose_name="Sessão do chat",
                    ),
                ),
            ],
            options={
                "verbose_name": "Pergunta",
                "verbose_name_plural": "Perguntas",
                "ordering": ["lastModified"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Prompt",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "dateCreated",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Data de criação"
                    ),
                ),
                (
                    "lastModified",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Última modificacao"
                    ),
                ),
                ("isActive", models.BooleanField(default=True, null=True)),
                ("isPublic", models.BooleanField(default=False, null=True)),
                ("isRemoved", models.BooleanField(default=False, null=True)),
                (
                    "prompt_name",
                    models.CharField(max_length=128, verbose_name="Nome do prompt"),
                ),
                (
                    "prompt_model",
                    models.CharField(
                        default="gpt-3.5-turbo", max_length=512, verbose_name="Modelo"
                    ),
                ),
                (
                    "prompt_command",
                    models.TextField(
                        default="Eu sou uma bot altamente inteligente, sempre respondo com precisão. Se você me fizer uma pergunta relacionada com os conteúdos da base de conhecimento irei lhe responder. Mas se você fizer uma pergunta vaga ou a resposta não existir na base de conhecimento irei responder com: Não sei",
                        verbose_name="Prompt do chat",
                    ),
                ),
                (
                    "prompt_temperature",
                    models.FloatField(
                        default=0.3,
                        help_text="Usar valor entre 0 e 2.",
                        verbose_name="Nivel de randomização",
                    ),
                ),
                (
                    "prompt_max_tokens",
                    models.PositiveSmallIntegerField(
                        default=100, verbose_name="Máximo de tokens para a resposta"
                    ),
                ),
                (
                    "prompt_frequency_penalty",
                    models.IntegerField(
                        default=0,
                        help_text="Informar -0.2 até 0.2, quanto maior menor a probabilidade do chat repetir os tópicos",
                        verbose_name="Penalizar com base na frequencia de tokens",
                    ),
                ),
                (
                    "prompt_presence_penalty",
                    models.IntegerField(
                        default=0,
                        help_text="Informar -0.2 até 0.2, quanto maior menor a probabilidade do chat se repetir mesmas frases",
                        verbose_name="Penalizar com base na frequencia de tokens",
                    ),
                ),
                ("lastLog", models.JSONField(blank=True, default=dict, null=True)),
                ("hasErrors", models.BooleanField(default=False)),
                (
                    "knowledge_base",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="prompt_using_this",
                        to="organizations.knowledgebase",
                        verbose_name="Base de conhecimento",
                    ),
                ),
            ],
            options={
                "verbose_name": "Prompts",
                "verbose_name_plural": "Prompts",
                "ordering": ["lastModified"],
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="chatsession",
            name="prompt",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="prompt_sessions",
                to="chats.prompt",
                verbose_name="ChatGPT prompt",
            ),
        ),
    ]
