openapi: 3.0.2
info:
  title: Documentacao API
  version: v1
  description: Lista de endpoints para API do CHATGPT-3
paths:
  /rest-api/v1/document/:
    get:
      operationId: listDocuments
      description: ''
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Document'
          description: ''
      tags:
      - rest-api
    post:
      operationId: createDocument
      description: ''
      parameters: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Document'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: ''
      tags:
      - rest-api
  /rest-api/v1/document/{id}/:
    get:
      operationId: retrieveDocument
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: ''
      tags:
      - rest-api
    put:
      operationId: updateDocument
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Document'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: ''
      tags:
      - rest-api
    patch:
      operationId: partialUpdateDocument
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Document'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: ''
      tags:
      - rest-api
    delete:
      operationId: destroyDocument
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - rest-api
  /rest-api/v1/organization/:
    get:
      operationId: listOrganizations
      description: ''
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Organization'
          description: ''
      tags:
      - rest-api
    post:
      operationId: createOrganization
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Organization'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: ''
      tags:
      - rest-api
  /rest-api/v1/organization/{id}/:
    get:
      operationId: retrieveOrganization
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: ''
      tags:
      - rest-api
    put:
      operationId: updateOrganization
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Organization'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: ''
      tags:
      - rest-api
    patch:
      operationId: partialUpdateOrganization
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Organization'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: ''
      tags:
      - rest-api
    delete:
      operationId: destroyOrganization
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - rest-api
  /rest-api/v1/knowledgebase/:
    get:
      operationId: listKnowledgeBases
      description: ''
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/KnowledgeBase'
          description: ''
      tags:
      - rest-api
    post:
      operationId: createKnowledgeBase
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KnowledgeBase'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KnowledgeBase'
          description: ''
      tags:
      - rest-api
  /rest-api/v1/knowledgebase/{id}/:
    get:
      operationId: retrieveKnowledgeBase
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KnowledgeBase'
          description: ''
      tags:
      - rest-api
    put:
      operationId: updateKnowledgeBase
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KnowledgeBase'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KnowledgeBase'
          description: ''
      tags:
      - rest-api
    patch:
      operationId: partialUpdateKnowledgeBase
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KnowledgeBase'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KnowledgeBase'
          description: ''
      tags:
      - rest-api
    delete:
      operationId: destroyKnowledgeBase
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - rest-api
  /rest-api/v1/chatsession/:
    get:
      operationId: listChatSessions
      description: ''
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/ChatSession'
          description: ''
      tags:
      - rest-api
    post:
      operationId: createChatSession
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatSession'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatSession'
          description: ''
      tags:
      - rest-api
  /rest-api/v1/chatsession/{id}/:
    get:
      operationId: retrieveChatSession
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatSession'
          description: ''
      tags:
      - rest-api
    put:
      operationId: updateChatSession
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatSession'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatSession'
          description: ''
      tags:
      - rest-api
    patch:
      operationId: partialUpdateChatSession
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatSession'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatSession'
          description: ''
      tags:
      - rest-api
    delete:
      operationId: destroyChatSession
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - rest-api
  /rest-api/v1/prompt/:
    get:
      operationId: listPrompts
      description: ''
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Prompt'
          description: ''
      tags:
      - rest-api
    post:
      operationId: createPrompt
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Prompt'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Prompt'
          description: ''
      tags:
      - rest-api
  /rest-api/v1/prompt/{id}/:
    get:
      operationId: retrievePrompt
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Prompt'
          description: ''
      tags:
      - rest-api
    put:
      operationId: updatePrompt
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Prompt'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Prompt'
          description: ''
      tags:
      - rest-api
    patch:
      operationId: partialUpdatePrompt
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Prompt'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Prompt'
          description: ''
      tags:
      - rest-api
    delete:
      operationId: destroyPrompt
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - rest-api
  /rest-api/v1/question/:
    get:
      operationId: listQuestions
      description: ''
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Question'
          description: ''
      tags:
      - rest-api
    post:
      operationId: createQuestion
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Question'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Question'
          description: ''
      tags:
      - rest-api
  /rest-api/v1/question/{id}/:
    get:
      operationId: retrieveQuestion
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Question'
          description: ''
      tags:
      - rest-api
    put:
      operationId: updateQuestion
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Question'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Question'
          description: ''
      tags:
      - rest-api
    patch:
      operationId: partialUpdateQuestion
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Question'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Question'
          description: ''
      tags:
      - rest-api
    delete:
      operationId: destroyQuestion
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - rest-api
  /api-token-auth/:
    post:
      operationId: createAuthToken
      description: ''
      parameters: []
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AuthToken'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AuthToken'
          application/json:
            schema:
              $ref: '#/components/schemas/AuthToken'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthToken'
          description: ''
      tags:
      - api-token-auth
components:
  schemas:
    Document:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        document_file:
          type: string
          format: binary
        knowledge_base:
          type: integer
      required:
      - document_file
      - knowledge_base
    Organization:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        organization_name:
          type: string
          maxLength: 256
        chatgpt_api_token:
          type: string
          maxLength: 512
      required:
      - organization_name
      - chatgpt_api_token
    KnowledgeBase:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        organization:
          type: integer
        knowledge_base_name:
          type: string
          description: "Utilizado na cria\xE7\xE3o do indice"
          maxLength: 512
      required:
      - organization
      - knowledge_base_name
    ChatSession:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        session_questions:
          type: array
          items:
            type: string
          readOnly: true
        session_name:
          type: string
          description: "Nome da sess\xE3o"
          maxLength: 128
        prompt:
          type: integer
      required:
      - session_name
      - prompt
    Prompt:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        prompt_name:
          type: string
          maxLength: 128
        knowledge_base:
          type: integer
        prompt_command:
          type: string
        prompt_temperature:
          type: number
          description: Usar valor entre 0 e 2.
        prompt_max_tokens:
          type: integer
          maximum: 32767
          minimum: 0
        prompt_frequency_penalty:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: "Informar -0.2 at\xE9 0.2, quanto maior menor a probabilidade\
            \ do chat repetir os t\xF3picos"
        prompt_presence_penalty:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: "Informar -0.2 at\xE9 0.2, quanto maior menor a probabilidade\
            \ do chat se repetir mesmas frases"
        lastLog:
          type: object
          readOnly: true
          nullable: true
        hasErrors:
          type: boolean
          readOnly: true
      required:
      - prompt_name
      - knowledge_base
    Question:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        resposta:
          type: string
          readOnly: true
        question_content:
          type: string
        chat_session:
          type: integer
        isReady:
          type: boolean
          readOnly: true
        hasErrors:
          type: boolean
          readOnly: true
      required:
      - question_content
      - chat_session
    AuthToken:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        token:
          type: string
          readOnly: true
      required:
      - username
      - password
